version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - node-app1
      - node-app2
  node-app1:
    image: node-app
    build: .
    env_file:
      - ./.env
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DB_HOST: mysql_master
      DB_READ_HOST1: mysql_slave
      DB_READ_HOST2: mysql_slave2
      PORT: 2222
      NODE_ENV: 'development'
    command: npm run dev

  node-app2:
    image: node-app
    build: .
    env_file:
      - ./.env
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DB_HOST: mysql_master
      DB_READ_HOST1: mysql_slave
      DB_READ_HOST2: mysql_slave2
      PORT: 3333
      NODE_ENV: 'development'
    command: npm run dev

  mysql_master:
    image: mysql:8
    env_file:
      - ./master/mysql_master.env
    container_name: 'mysql_master'
    restart: 'no'
    ports:
      - 3306
    volumes:
      - ./master/my.cnf:/etc/mysql/my.cnf
      - ./master/data:/var/lib/mysql

  mysql_slave:
    image: mysql:8
    env_file:
      - ./slave/mysql_slave.env
    container_name: 'mysql_slave'
    restart: 'no'
    ports:
      - 3306
    depends_on:
      - mysql_master
      - mysql_slave2
    volumes:
      - ./slave/my.cnf:/etc/mysql/my.cnf
      - ./slave/data:/var/lib/mysql

  mysql_slave2:
    image: mysql:8
    env_file:
      - ./slave2/mysql_slave.env
    container_name: 'mysql_slave2'
    restart: 'no'
    ports:
      - 3306
    depends_on:
      - mysql_master
    volumes:
      - ./slave2/my.cnf:/etc/mysql/my.cnf
      - ./slave2/data:/var/lib/mysql
  redis:
    image: redis
